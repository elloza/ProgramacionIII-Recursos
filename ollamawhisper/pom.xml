<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.elloza</groupId>
    <artifactId>ollama-whisper-example</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


     <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
        <!-- Descargar el JAR antes de compile -->
        <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
            <execution>
                <id>download-external-jar</id>
                <!-- Antes de compilar, por ejemplo en 'initialize' -->
                <phase>initialize</phase>
                <goals>
                <goal>wget</goal>
                </goals>
                <configuration>
                <!-- URL TO EXTERNAL JAR-->
                <url>https://github.com/GiviMAD/whisper-jni/releases/download/whisper_jni_1.6.1/whisper-jni-1.6.1.jar</url>
                <outputDirectory>${project.build.directory}/downloaded-deps</outputDirectory>
                <unpack>false</unpack>
                <!-- Por defecto, si el archivo ya existe, no lo vuelve a descargar a menos que sea más viejo -->
                </configuration>
            </execution>
            <execution>
                <id>download-external-jar-biblioteca</id>
                <!-- Antes de compilar, por ejemplo en 'initialize' -->
                <phase>initialize</phase>
                <goals>
                <goal>wget</goal>
                </goals>
                <configuration>
                <!-- URL TO EXTERNAL JAR-->
                <url>http://maxus.fis.usal.es/HOTHOUSE/p3/biblioteca18.jar</url>
                <outputDirectory>${project.build.directory}/downloaded-deps</outputDirectory>
                <unpack>false</unpack>
                <!-- Por defecto, si el archivo ya existe, no lo vuelve a descargar a menos que sea más viejo -->
                </configuration>
            </execution>
            </executions>
        </plugin>

        <!-- Instalar el JAR en el repo local antes de compile -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>3.0.0-M1</version>
            <executions>
            <execution>
                <id>install-downloaded-jar</id>
                <phase>initialize</phase>
                <goals>
                <goal>install-file</goal>
                </goals>
                <configuration>
                <!-- Dependencia externa por URL-->
                <file>${project.build.directory}/downloaded-deps/whisper-jni-1.6.1.jar</file>
                <groupId>io.github.givimad</groupId>
                <artifactId>whisper-jni</artifactId>
                <version>1.0.0</version>
                <packaging>jar</packaging>
                </configuration>
            </execution>
            <execution>
                <id>install-downloaded-jar-biblioteca</id>
                <phase>initialize</phase>
                <goals>
                <goal>install-file</goal>
                </goals>
                <configuration>
                <!-- Dependencia externa por URL-->
                <file>${project.build.directory}/downloaded-deps/biblioteca18.jar</file>
                <groupId>es.usal.fis.maxus</groupId>
                <artifactId>biblioteca18</artifactId>
                <version>1.0.0</version>
                <packaging>jar</packaging>
                </configuration>
            </execution>
            </executions>
        </plugin>

        <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-shade-plugin</artifactId>
      <version>3.2.4</version>
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>shade</goal>
          </goals>
          <configuration>
            <!-- Clase principal -->
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>com.elloza.ollamawhisperexample.Main</mainClass>
              </transformer>
            </transformers>
          </configuration>
        </execution>
      </executions>
    </plugin>
        </plugins>
    </build>

    <dependencies>
    <!-- Dependencia añadida por URL directamente-->
        <dependency>
            <groupId>io.github.givimad</groupId>
            <artifactId>whisper-jni</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.kwhat</groupId>
            <artifactId>jnativehook</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>io.github.ollama4j</groupId>
            <artifactId>ollama4j</artifactId>
            <version>1.0.90</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.11</version>
        </dependency>
    </dependencies>
</project>